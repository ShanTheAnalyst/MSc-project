# print(y_test.value_counts())
# X_test = pd.DataFrame(X_test) # Converting X_test to Dataframe
# y_test = pd.DataFrame(y_test) # Converting y_test to Dataframe
# y_test = y_test.loc[:, 0] 

# # getting bots generated by GAN
# df_gan_bots = pd.read_csv('./datasets/gan_bots.csv')

# # # getting only benign data samples
# # df_gan_bots = pd.read_csv('./datasets/only_benign.csv')

# # Selecting all rows except last one
# X_gan_bots = df_gan_bots.iloc[:, :-1].values
# # convert array to Dataframe
# X_gan_bots = pd.DataFrame(X_gan_bots)

# # Selecting all rows of last column (Label)
# y_gan_bot = df_gan_bots.iloc[:, -1].values
# # convert array to Dataframe
# y_gan_bot = pd.DataFrame(y_gan_bot)
# y_gan_bot = y_gan_bot.loc[:, 0]

# X_gan_real = [X_test, X_gan_bots]
# X_new_test =  pd.concat(X_gan_real)

# y_gan_real = [y_test, y_gan_bot]
# y_new_test =  pd.concat(y_gan_real)

# print(X_test.shape)
# print(y_test.shape)
# print(X_new_test.shape)
# print(y_new_test.shape)
# a = pd.DataFrame(y_test)
# print(y_new_test.value_counts())



==========================================
X_evade_ind = pd.DataFrame(X_evade_ind)

# getting data od all sixty columns
y_evade_ind = [y_new_test[i] for i in range(len(index))]
y_evade_ind = np.array(y_evade_ind)
y_evade_ind = y_evade_ind[:,-1]
y_evade_ind = pd.DataFrame(y_evade_ind)

# merging  
horizontal_stack = pd.concat([X_evade_ind, y_evade_ind], axis=1, sort=False)

evaded_data = [X_evade_ind , y_evade_ind]
concat = pd.concat(evaded_data)
print('Evaded data shape: ', concat.shape)
# print(np.array(X_new.iloc[1, :]))
# print(len(ind))
# [X_new.loc[:,:j] for j in range(5)]

# evaded_bots = pd.DataFrame(X_evade_ind)
# evaded_bots.to_csv('./datasets/evaded_bots.csv', index=False)
=====================
df_gan_bots = pd.read_csv('./datasets/gan_bots.csv')
df_gan_bots = df_gan_bots.loc[:, ~df_gan_bots.columns.str.contains('^Unnamed')]

# 5000 gan bots with benign samples from orginal dataset
df_gan_bots = pd.concat([df_gan_bots, rand_data])
print(df_gan_bots['Label'].value_counts())

# Selecting all rows except last one from gan bots
X = df_gan_bots.iloc[:, :-1].values

# Selecting all rows of last column (Label)
y = df_gan_bots.iloc[:, -1].values

X_train, X_new_test, y_train, y_new_test = train_test_split(X, y, test_size = 0.30)